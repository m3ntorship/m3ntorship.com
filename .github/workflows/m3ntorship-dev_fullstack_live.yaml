name: live to m3ntorship-dev cluster

on:
  push:
    branches:
      - master

jobs:
  
  prepare:
    runs-on: ubuntu-latest
    
    outputs:
      sha: ${{ steps.prepare.outputs.sha }}
      version: ${{ steps.prepare.outputs.version }}
      image_frontend: m3ntorshipci/m3ntorshipcom-frontend
      image_backend: m3ntorshipci/m3ntorshipcom-backend
      dockerfile_frontend: Dockerfile.m3ntorship-dev.frontend
      dockerfile_backend: Dockerfile.m3ntorship-dev.backend
    steps:
    - uses: actions/checkout@v2
    - id: prepare
      run: |
        echo "::set-output name=sha::$(git rev-parse HEAD)"
        echo "::set-output name=version::$(git rev-parse --short=4 HEAD)"
  
  build_frontend:
    needs: [prepare]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: |
        yarn --cwd frontend 
        
    - name: build
      env:
        M3NTORSHIP_APP_STRAPI_URL: http://localhost:1337
      run: |
        yarn --cwd frontend build
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{needs.prepare.outputs.image_frontend}}
        dockerfile: ${{needs.prepare.outputs.dockerfile_frontend}}
        tags: ${{needs.prepare.outputs.version}}
  build_backend:
    needs: [prepare]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: install dependencies
      run: |
        yarn --cwd backend 
        
    - name: build
      run: |
        yarn --cwd backend build

    - name: Build and push Docker image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{needs.prepare.outputs.image_backend}}
        dockerfile: ${{needs.prepare.outputs.dockerfile_backend}}
        tags: ${{needs.prepare.outputs.version}}
        build_args: STRAPI_ADMIN_PATH=${{secrets.M3_STRAPI_ADMIN_PATH}}
        
    # DELETE OLD TAGS https://hub.docker.com/v2/repositories/amd64/ubuntu/tags?page_size=5000
  deploy:
    needs: 
      - prepare
      - build_frontend
      - build_backend 
    runs-on: ubuntu-latest
    env:
      M3_VERSION: ${{needs.prepare.outputs.version}}
    steps:
      - uses: actions/checkout@v2
      - uses: azure/setup-kubectl@v1
      - name: Kubectl configuration
        shell: bash
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG_DEV }}" | base64 -d -i > ~/.kube/config
      - name: install moustache
        run: |
          curl -sSL https://git.io/get-mo -o mo
          chmod +x mo
          sudo mv mo /usr/local/bin/
          echo "works" | mo

      # deploy live
      - name: deploy-live
        env:
          M3_DEPLOYMENT_PATH: deploy/live/fullstack
          TEMP_DIR: temp
          M3_NAMESPACE: m3ntorshipcom-live
          M3_PROJECT: m3ntorshipcom
          M3_COMPONENET: fullstack
          M3_ENVIRONMENT: live
          M3_REPLICAS: "3"
          M3_PORT_FRONTEND: "3000"
          M3_PORT_BACKEND: "1337"
          M3_VERSION: ${{needs.prepare.outputs.version}}
          M3_SHA: ${{needs.prepare.outputs.sha}}
        run: |
          mkdir -p $TEMP_DIR
          for f in $M3_DEPLOYMENT_PATH/apply/*; do mo -u "$f" > $TEMP_DIR/"$(basename $f)"; done
          kubectl apply -f $TEMP_DIR
      - name: force-nextjs-incremental-build
        run: |
          sleep 60
          curl https://m3ntorship.net
          curl https://m3ntorship.com
          sleep 10
          curl https://m3ntorship.net
          curl https://m3ntorship.com
